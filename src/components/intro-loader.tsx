"use client";

import { useEffect, useState } from 'react';
import Image from 'next/image';
import { cn } from '@/lib/utils';

type IntroLoaderProps = {
  onFinished: () => void;
};

const DrawingSpring = ({ show }: { show: boolean }) => (
  <div className={cn("relative w-48 h-48 flex items-center justify-center transition-opacity duration-1000", show ? "opacity-100" : "opacity-0")}>
    <svg className="drawing-spring" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
      <path d="M12177 16248 c-4 -32 -23 -87 -48 -137 -33 -67 -59 -102 -128 -171
-85 -85 -263 -213 -364 -261 -46 -22 -49 -23 -90 -7 -209 82 -270 104 -397
144 -310 97 -649 171 -1001 218 -1032 141 -2297 67 -3014 -176 -223 -75 -379
-177 -432 -281 -54 -108 -24 -240 77 -330 206 -185 773 -331 1570 -403 236
-21 908 -30 1167 -15 757 44 1457 186 1973 400 l95 40 79 -43 c186 -102 375
-263 445 -379 52 -89 65 -133 66 -228 0 -81 -2 -90 -42 -170 -25 -50 -66 -111
-103 -151 -74 -81 -221 -194 -348 -267 l-93 -53 -102 42 c-380 159 -870 279
-1417 350 -320 41 -508 52 -935 57 -366 4 -455 2 -690 -16 -496 -39 -880 -99
-1160 -181 -435 -128 -607 -254 -607 -446 -1 -82 27 -138 101 -207 213 -197
777 -340 1631 -414 287 -25 991 -25 1275 0 710 61 1282 183 1777 379 l127 50
68 -37 c322 -176 523 -408 523 -604 0 -192 -175 -404 -486 -587 -51 -30 -98
-54 -106 -54 -7 0 -67 22 -134 49 -472 192 -1080 319 -1799 378 -294 24 -928
24 -1225 0 -848 -70 -1438 -218 -1651 -414 -75 -70 -101 -125 -101 -209 0
-152 106 -258 367 -365 283 -117 699 -198 1310 -256 273 -26 1114 -26 1390 0
696 65 1287 196 1745 386 l95 39 55 -28 c30 -15 96 -55 146 -87 180 -119 293
-236 358 -373 27 -58 31 -75 31 -156 0 -87 -2 -94 -43 -177 -70 -142 -220
-280 -445 -412 l-98 -57 -82 35 c-286 121 -653 225 -1065 301 -942 175 -2255
149 -3067 -59 -274 -70 -493 -163 -592 -250 -101 -89 -134 -219 -83 -327 131
-279 928 -486 2038 -530 992 -39 1979 102 2704 388 75 30 141 54 147 54 15 0
178 -97 251 -148 36 -26 100 -80 143 -121 261 -249 261 -493 0 -742 -43 -41
-107 -95 -143 -121 -73 -51 -236 -148 -251 -148 -6 0 -72 24 -147 54 -723 285
-1712 427 -2704 388 -688 -27 -1269 -118 -1647 -259 -208 -77 -344 -171 -391
-271 -51 -108 -18 -238 83 -327 61 -54 232 -140 367 -185 731 -244 2028 -311
3072 -160 477 70 941 191 1285 337 l82 35 98 -57 c225 -132 375 -270 445 -412
41 -83 43 -90 43 -177 0 -81 -4 -98 -31 -156 -65 -137 -178 -254 -358 -373
-50 -32 -116 -72 -146 -87 l-55 -28 -95 39 c-458 190 -1049 321 -1745 386
-276 26 -1117 26 -1390 0 -611 -58 -1027 -139 -1310 -256 -261 -107 -367 -213
-367 -365 0 -84 26 -139 101 -209 213 -196 803 -344 1651 -414 297 -24 931
-24 1225 0 476 39 875 102 1245 198 177 46 466 141 588 193 46 20 91 36 99 36
22 0 186 -99 278 -167 98 -73 211 -191 252 -264 39 -68 63 -148 63 -210 0
-196 -201 -428 -523 -604 l-68 -37 -127 50 c-495 196 -1067 318 -1777 379
-284 25 -988 25 -1275 0 -608 -53 -1056 -137 -1362 -258 -169 -66 -306 -167
-349 -255 -29 -61 -29 -153 -1 -217 112 -252 742 -439 1747 -518 235 -18 324
-20 690 -16 427 5 615 16 935 57 547 71 1037 191 1417 350 l102 42 93 -53
c127 -73 274 -186 348 -267 37 -40 78 -101 103 -151 40 -80 42 -89 42 -170 -1
-95 -14 -139 -66 -228 -70 -116 -259 -278 -445 -379 l-79 -43 -108 44 c-484
196 -1023 314 -1737 382 -235 22 -1088 25 -1325 5 -369 -32 -795 -94 -1015
-148 -271 -67 -521 -172 -619 -260 -102 -91 -132 -223 -78 -331 101 -199 551
-365 1238 -458 432 -58 958 -83 1402 -66 692 26 1269 118 1809 286 125 39 186
61 395 143 41 16 44 15 90 -7 101 -48 279 -176 364 -261 69 -69 95 -104 128
-171 25 -50 44 -105 48 -137 l6 -52 170 2 171 3 -3 54 c-6 118 -63 273 -143
389 -71 104 -216 244 -339 328 -51 35 -65 50 -62 65 3 10 42 45 87 77 211 154
357 334 420 518 120 353 -25 703 -408 988 -57 43 -103 84 -102 91 1 7 47 47
101 88 105 78 236 207 297 292 185 258 202 570 46 838 -79 135 -225 287 -380
394 -51 35 -65 49 -60 63 4 10 45 46 91 80 276 208 417 419 451 675 10 75 9
106 -4 186 -40 246 -184 454 -449 650 -45 34 -85 69 -89 79 -5 14 9 28 65 66
88 60 252 216 313 298 128 170 188 375 164 559 -6 45 -18 105 -27 132 -24 76
-85 193 -137 261 -61 82 -225 238 -313 298 -56 38 -70 52 -65 66 4 10 44 45
89 79 265 196 409 404 449 650 50 306 -104 603 -447 861 -46 34 -87 70 -91 80
-5 14 9 28 60 63 443 305 597 729 405 1111 -72 143 -200 288 -368 413 -54 41
-100 81 -101 88 -1 7 45 48 102 91 604 449 599 1061 -12 1506 -45 32 -84 67
-87 77 -3 15 11 30 62 65 123 84 268 224 339 328 80 116 137 271 143 389 l3
54 -171 3 -170 2 -6 -52z m-2716 -498 c455 -23 894 -85 1284 -181 161 -39 365
-100 365 -109 0 -4 -42 -19 -92 -35 -395 -119 -827 -197 -1340 -242 -250 -21
-968 -24 -1203 -5 -471 40 -879 104 -1122 178 -144 43 -273 93 -273 104 0 19
254 108 412 144 282 65 769 128 1113 145 241 12 627 12 856 1z m4 -1675 c341
-12 799 -72 1155 -151 174 -39 471 -121 483 -134 10 -9 -65 -35 -248 -84 -344
-92 -696 -152 -1140 -193 -273 -26 -1058 -26 -1330 0 -449 42 -795 98 -1030
168 -149 44 -266 89 -267 104 0 6 37 25 82 43 162 66 340 111 611 156 556 91
995 115 1684 91z m245 -1689 c500 -46 970 -132 1300 -239 123 -40 129 -34 -89
-97 -962 -278 -2314 -314 -3384 -91 -162 34 -457 132 -457 151 0 26 319 129
509 165 375 71 524 89 1056 129 134 10 901 -3 1065 -18z m-70 -1670 c401 -31
779 -89 1115 -172 131 -33 338 -94 349 -104 16 -15 -362 -118 -619 -169 -496
-98 -989 -138 -1580 -128 -521 10 -800 37 -1265 122 -248 46 -578 151 -553
176 38 38 322 125 548 168 341 64 615 96 1055 122 188 10 716 2 950 -15z
m-144 -1666 c467 -26 913 -92 1294 -191 218 -56 324 -90 314 -99 -11 -10 -218
-71 -349 -104 -948 -235 -2165 -257 -3165 -56 -80 16 -199 46 -265 66 -114 34
-245 87 -245 98 0 26 345 131 560 171 370 68 564 90 1025 118 128 8 671 6 831
-3z m-111 -1670 c551 -21 1096 -103 1536 -230 218 -63 212 -57 89 -97 -342
-110 -809 -195 -1320 -240 -278 -25 -1014 -25 -1290 0 -567 51 -992 133 -1247
239 -40 16 -73 33 -73 38 0 19 295 117 457 151 564 117 1190 165 1848 139z
m345 -1694 c440 -42 826 -109 1160 -202 180 -50 223 -65 213 -74 -12 -13 -309
-95 -483 -134 -558 -124 -1155 -174 -1855 -155 -522 15 -1103 93 -1431 193
-117 35 -249 89 -247 101 3 15 121 61 268 104 240 71 618 132 1025 166 102 8
203 17 225 19 22 2 245 2 495 1 328 -2 504 -7 630 -19z m-40 -1670 c492 -43
910 -118 1298 -233 67 -20 122 -39 122 -43 0 -9 -204 -70 -365 -109 -914 -225
-2053 -253 -3048 -75 -177 32 -249 48 -372 86 -116 35 -245 87 -245 99 0 10
132 60 273 103 269 82 785 158 1247 185 223 13 876 5 1090 -13z" />
    </svg>
  </div>
);

const LogoAndText = ({ show }: { show: boolean }) => (
    <div className={cn("flex flex-col items-center text-primary transition-opacity duration-1000", show ? "opacity-100" : "opacity-0")}>
       <Image src="/public/LOGO PRINCIPAL BLANCO.png" 
       alt="FormaResortes Logo" 
       width={240} height={120} priority />
       <p className="mt-4 text-lg font-headline tracking-wider text-primary/80 text-center">
        RESORTES DE PRECISIÃ“N Y FORMAS DE ALAMBRE
      </p>
    </div>
);


export default function IntroLoader({ onFinished }: IntroLoaderProps) {
  const [phase, setPhase] = useState(0);

  useEffect(() => {
    const timers = [
      setTimeout(() => setPhase(1), 100),   // 1. Start animation
      setTimeout(() => setPhase(2), 5500),  // 2. Show logo and text (after 2 loops of 2.5s)
      setTimeout(() => setPhase(3), 7500), // 3. Start fade out
      setTimeout(() => onFinished(), 8300) // 4. Finish
    ];

    return () => {
      timers.forEach(clearTimeout);
    };
  }, [onFinished]);

  return (
    <div
      className={cn(
        "fixed inset-0 flex flex-col items-center justify-center bg-[#0a192f] z-50 transition-opacity duration-800",
        phase === 3 && "opacity-0"
      )}
    >
        <div className="absolute inset-0 flex items-center justify-center">
            {phase < 2 && <DrawingSpring show={phase === 1} />}
        </div>
        <div className={cn("transition-opacity duration-1000", phase >= 2 ? "opacity-100" : "opacity-0")}>
            <LogoAndText show={phase >= 2} />
        </div>

    </div>
  );
}
